# 用于实时监控指定多个目录下的多个文件,并将文件的追加内容打印到控制台进行测试
# taildir source-memory channel-logger sink
# 打印至控制台参数-Dflume.root.logger=INFO,console

# 定义Agent三大件
a1.sources = r1
a1.channels = c1
a1.sinks = k1

# 配置a1.sources.r1
a1.sources.r1.type = TAILDIR
# 设置Json文件存储路径(最好使用绝对路径)
# 用于记录文件inode/文件的绝对路径/每个文件的最后读取位置等信息
a1.sources.r1.positionFile = /opt/module/flume-1.8.0/.position/taildir_position.json
# 指定监控的文件组
a1.sources.r1.filegroups = f1 f2
# 配置文件组中的文件
# 设置f1组的监控文件,注意:使用的是正则表达式,而不是Linux通配符
a1.sources.r1.filegroups.f1 = /tmp/file/.*log.*
# 设置f2组的监控文件,注意:使用的是正则表达式,而不是Linux通配符
a1.sources.r1.filegroups.f2 = /tmp/logs/.*log.*
# 设置f1组生成的Event中的Header,以键值对的形式进行填充<headerKey,headerValue>
# 此设置专门用于功能测试可以不设置
a1.sources.r1.headers.f1.type = logs
a1.sources.r1.headers.f1.purpose = test
a1.sources.r1.headers.f2.testHeaderKey1 = testHeaderValue1
a1.sources.r1.headers.f2.testHeaderKey2 = testHeaderValue2

# 配置a1.sinks.k1
# 设置成logger,java运行时通过指定-Dflume.root.logger=INFO,console参数将结果打印到console控制台
a1.sinks.k1.type = logger
# 设置Event的Body中写入log的最大字节数(默认值为16)
a1.sinks.k1.maxBytesToLog = 256

# 配置a1.channels.c1
# 使用内存作为缓存/最多缓存的Event个数/单次传输的Event个数
a1.channels.c1.type = memory
a1.channels.c1.capacity = 1000
a1.channels.c1.transactionCapacity = 100

# 绑定sources/sinks与channels
a1.sources.r1.channels = c1
a1.sinks.k1.channel = c1
