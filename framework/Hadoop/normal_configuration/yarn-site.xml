<configuration>

    <!--Site specific YARN configuration properties-->

    <!--设置Reducer获取数据的方式-->
    <property>
        <name>yarn.nodemanager.aux-services</name>
        <value>mapreduce_shuffle</value>
    </property>

    <!--指定YARN中ResourceManager节点的主机地址-->
    <!-- 默认值:0.0.0.0 -->
    <property>
        <name>yarn.resourcemanager.hostname</name>
        <value>hadoop102</value>
        <description>The hostname of the RM.</description>
    </property>

    <!-- YARN资源相关设置 -->

    <!-- 设置nodemanager主机具有的虚拟CPU核心个数 -->
    <!-- 由于本机只有2个核心,因此设置为2 -->
    <!-- 默认值:8 -->
    <property>
        <name>yarn.nodemanager.resource.cpu-vcores</name>
        <value>2</value>
        <description>
            Number of vcores that can be allocated
            for containers. This is used by the RM scheduler when allocating
            resources for containers. This is not used to limit the number of
            physical cores used by YARN containers.
        </description>
    </property>
    <!-- 设置分配给container的最少CPU核心个数 -->
    <!-- 默认值:1 -->
    <property>
        <name>yarn.scheduler.minimum-allocation-vcores</name>
        <value>1</value>
        <description>
            The minimum allocation for every container request at the RM,
            in terms of virtual CPU cores. Requests lower than this will throw a
            InvalidResourceRequestException.
        </description>
    </property>
    <!-- 设置分配给container的最多CPU核心个数 -->
    <!-- 由于本机只有2个核心,因此设置为2 -->
    <!-- 默认值:8 -->
    <property>
        <name>yarn.scheduler.maximum-allocation-vcores</name>
        <value>2</value>
        <description>
            The maximum allocation for every container request at the RM,
            in terms of virtual CPU cores. Requests higher than this will throw a
            InvalidResourceRequestException.
        </description>
    </property>
    <!--此参数指的是当前主机nodemanager的用于分配给Container的物理内存大小,单位为MB
        建议设置成较小于实际物理内存的值,留余一部分内存给操作系统使用.-->
    <!--本次实验主机内存大小为2GB,因此将次参数设置成1536MB,剩余部分留给操作系统 -->
    <!--默认值:8192-->
    <property>
        <name>yarn.nodemanager.resource.memory-mb</name>
        <value>1536</value>
        <description>
            Amount of physical memory, in MB, that can be allocated for containers.
        </description>
    </property>
    <!-- 用于分配给Container的虚拟内存与物理内存的比例,
    当物理内存不够用时,便会使用虚拟内存通过外部存储设备,代替部分物理内存使用
    由于是实验机器,此处增大此值. -->
    <!-- 默认值:2.1 -->
    <property>
        <name>yarn.nodemanager.vmem-pmem-ratio</name>
        <value>4</value>
        <description>
            Ratio between virtual memory to physical memory when
            setting memory limits for containers. Container allocations are
            expressed in terms of physical memory, and virtual memory usage
            is allowed to exceed this allocation by this ratio.
        </description>
    </property>
    <!-- 是否限制Container对于虚拟内存的使用,即使超出预设的虚拟内存大小
    由于是实验机器,此处将此值设置为false,避免内存不足导致程序报错 -->
    <!-- 默认值:true -->
    <property>
        <name>yarn.nodemanager.vmem-check-enabled</name>
        <value>false</value>
        <description>
            Whether virtual memory limits will be enforced for containers.
        </description>
    </property>
    <!-- 每个Container申请的最小内存大小,单位MB. -->
    <!-- 由于实验主机实际物理内存只有2GB,因此此处将此值减小,这是为了能够同时分配多个
    Container,便于同时运行多个Map task和Reduce task.-->
    <!-- 此值必须小于 yarn.nodemanager.resource.memory-mb 对应值 -->
    <!-- 默认值:1024 -->
    <property>
        <name>yarn.scheduler.minimum-allocation-mb</name>
        <value>512</value>
        <description>
            The minimum allocation for every container request at the RM,
            in MBs. Memory requests lower than this will throw a
            InvalidResourceRequestException.
        </description>
    </property>
    <!-- 每个Container申请的最大内存大小,单位MB. -->
    <!-- 由于每台实验主机实际物理内存只有1.5GB,因此此处将此值减小为1536 -->
    <!-- 默认值:8192 -->
    <property>
        <name>yarn.scheduler.maximum-allocation-mb</name>
        <value>1536</value>
        <description>
            The maximum allocation for every container request at the RM,
            in MBs. Memory requests higher than this will throw a 
            InvalidResourceRequestException.
        </description>
    </property>


    <!-- 以下是Timeline相关设置 -->

    <!-- 设置是否开启/使用Yarn Timeline服务 -->
    <!-- 默认值:false -->
    <property>
        <name>yarn.timeline-service.enabled</name>
        <value>true</value>
        <description>
            In the server side it indicates whether timeline service is enabled or not.
            And in the client side, users can enable it to indicate whether client wants
            to use timeline service. If it's enabled in the client side along with
            security, then yarn client tries to fetch the delegation tokens for the
            timeline server.
        </description>
    </property>
    <!-- 设置RM是否发布信息到Timeline服务器 -->
    <!-- 默认值:false -->
    <property>
        <name>yarn.resourcemanager.system-metrics-publisher.enabled</name>
        <value>true</value>
        <description>
            The setting that controls whether yarn system metrics is
            published on the timeline server or not by RM.
        </description>
    </property>
    <!-- 设置是否从Timeline history-service中获取通用信息,如果为否,则是通过RM获取 -->
    <!-- 默认值:false -->
    <property>
        <name>yarn.timeline-service.generic-application-history.enabled</name>
        <value>true</value>
        <description>
            Indicate to clients whether to query generic application data from 
            timeline history-service or not. If not enabled then application 
            data is queried only from Resource Manager. Defaults to false.
        </description>
    </property>
    <!-- leveldb是用于存放Timeline历史记录的数据库,此参数控制leveldb文件存放路径所在 -->
    <!-- 默认值:${hadoop.tmp.dir}/yarn/timeline,其中hadoop.tmp.dir在core-site.xml中设置 -->
    <property>
        <name>yarn.timeline-service.leveldb-timeline-store.path</name>
        <value>${hadoop.tmp.dir}/yarn/timeline</value>
        <description>Store file name for leveldb timeline store.</description>
    </property>
    <!-- 设置leveldb中状态文件存放路径 -->
    <!-- 默认值:${hadoop.tmp.dir}/yarn/timeline -->
    <property>
        <name>yarn.timeline-service.leveldb-state-store.path</name>
        <value>${hadoop.tmp.dir}/yarn/timeline</value>
        <description>Store file name for leveldb state store.</description>
    </property>
    <!-- 设置Timeline Service Web App的主机名,此处将Timeline服务器部署在集群中的hadoop103上 -->
    <!-- 默认值:0.0.0.0 -->
    <property>
        <name>yarn.timeline-service.hostname</name>
        <value>hadoop103</value>
        <description>The hostname of the timeline service web application.</description>
    </property>
    <!-- 设置timeline server rpc service的地址及端口 -->
    <!-- 默认值:${yarn.timeline-service.hostname}:10200 -->
    <property>
        <name>yarn.timeline-service.address</name>
        <value>${yarn.timeline-service.hostname}:10200</value>
        <description>
            This is default address for the timeline server to start the RPC server.
        </description>
    </property>
    <!-- 设置Timeline Service Web App的http地址及端口,由于yarn.http.policy默认值为HTTP_ONLY,
    因此只需要设置http地址即可,不需要设置https -->
    <!-- 默认值:${yarn.timeline-service.hostname}:8188 -->
    <property>
        <name>yarn.timeline-service.webapp.address</name>
        <value>${yarn.timeline-service.hostname}:8188</value>
        <description>The http address of the timeline service web application.</description>
    </property>
    <!-- 设置Timeline服务绑定的IP地址 -->
    <!-- 默认值:空 -->
    <property>
        <name>yarn.timeline-service.bind-host</name>
        <value>192.168.126.103</value>
        <description>
            The actual address the server will bind to. If this optional address is
            set, the RPC and webapp servers will bind to this address and the port specified in
            yarn.timeline-service.address and yarn.timeline-service.webapp.address, respectively.
            This is most useful for making the service listen to all interfaces by setting to
            0.0.0.0.
        </description>
    </property>
    <!-- 启动Timeline数据自动过期清除 -->
    <!-- 默认值:true -->
    <property>
        <name>yarn.timeline-service.ttl-enable</name>
        <value>true</value>
        <description>Enable age off of timeline store data.</description>
    </property>
    <!-- 设置Timeline数据过期时间,单位ms -->
    <!-- 默认值:604800000,即7天 -->
    <property>
        <name>yarn.timeline-service.ttl-ms</name>
        <value>604800000</value>
        <description>Time to live for timeline store data in milliseconds.</description>
    </property>
    <!-- 设置http是否允许CORS(跨域资源共享,Cross-Origin Resource Sharing) -->
    <!-- 默认值:false -->
    <property>
        <name>yarn.timeline-service.http-cross-origin.enabled</name>
        <value>true</value>
        <description>
            Enables cross-origin support (CORS) for web services where cross-origin web 
            response headers are needed. For example, javascript making a web services 
            request to the timeline server. Defaults to false.
        </description>
    </property>


    <!-- 以下是日志聚集功能设置 -->

    <!--开启日志聚集功能-->
    <property>
        <name>yarn.log-aggregation-enable</name>
        <value>true</value>
    </property>

    <!--日志聚集位置,默认为HDFS文件系统的/tmp/logs路径下,默认格式为/tmp/logs/${user}/logs-->
    <!--默认值:/tmp/logs-->
    <property>
        <name>yarn.nodemanager.remote-app-log-dir</name>
        <value>/tmp/logs</value>
    </property>

    <!--聚集日志保留时间设置7天-->
    <property>
        <name>yarn.log-aggregation.retain-seconds</name>
        <value>604800</value>
    </property>

</configuration>