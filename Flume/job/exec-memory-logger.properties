# 用于从指定Unix命令的标准输出中收集数据source(exec source)经处理后通过channel(memory channel)传输最后输出到控制台sink(logger sink)
# 打印至控制台参数-Dflume.root.logger=INFO,console

# Name the components on this agent
# 定义Agent:a1的sources/sinks/channels
a1.sources = r1
a1.sinks = k1
a1.channels = c1

# Describe/configure the source
# 配置a1.sources.r1的各项属性参数,类型/执行命令
a1.sources.r1.type = exec
# 使用tail -F参数表示即使文件不存在也会继续跟踪此文件,持续监视输出最新数据
a1.sources.r1.command = tail -F /tmp/logs/app-2020-02-29.log

# Use a channel which buffers events in memory
# 定义a1的channerls.c1的类型为memory,即使用内存作为缓存/最多缓存的Event个数/单次传输的Event个数
a1.channels.c1.type = memory
a1.channels.c1.capacity = 1000
a1.channels.c1.transactionCapacity = 100

# Describe the sink
# 定义a1的sinks.k1的类型为logger,即输出到控制台实时显示
a1.sinks.k1.type = logger
# 设置Event的Body中写入log的最大字节数
a1.sinks.k1.maxBytesToLog = 256

# Bind the source and sink to the channel
# 将定义好的a1.source.r1和a1.sink.k1与其对接的channel(a1.channels.c1)绑定到一起
# 注意:source可以绑定多个channel,但是sink只能绑定单个channel
a1.sources.r1.channels = c1
a1.sinks.k1.channel = c1